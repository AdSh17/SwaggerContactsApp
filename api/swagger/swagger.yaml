swagger: "2.0"
info:
  version: "0.0.1"
  title: Contacts App
# during dev, should point to your local machine
host: localhost:8081
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - application/octet-stream
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/html
paths:

  /contacts:
    # binds a127 app logic to a route
    x-swagger-router-controller: contacts_controller
    get:
      description: Get all the contacts
      # used as the method name of the controller
      operationId: getAllContacts
      parameters:
        - name: firstName
          in: query
          description: First name of the contact
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ContactsList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
          description: Create new contact
          # used as the method name of the controller
          operationId: create
          parameters:
            - name: firstName
              in: query
              description: First name of the new contact
              type: string
              required : true
          responses:
            "200":
              description: Success
              schema:
                # a pointer to a definition
                $ref: "#/definitions/ContactNew"
            # responses may fall through to errors
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"

  /contacts/{id}:
      # binds a127 app logic to a route
      x-swagger-router-controller: contacts_controller
      get:
        description: Returns a single entry of contact by id
        # used as the method name of the controller
        operationId: getContact
        parameters:
          - name: id
            required : true
            in: path
            description: Unique Id of the contact
            type: string
        responses:
          "200":
            description: Success
            schema:
              # a pointer to a definition
              $ref: "#/definitions/ContactsList"
          # responses may fall through to errors
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

      put:
          description: Returns a single entry of contact by id
          # used as the method name of the controller
          operationId: updateContact
          parameters:
            - name: id
              required : true
              in: path
              description: Unique Id of the contact
              type: string
          responses:
            "200":
              description: Success
              schema:
                # a pointer to a definition
                $ref: "#/definitions/ContactsList"
            # responses may fall through to errors
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"

 # complex objects have schema definitions
definitions:
  ContactsList:
    required:
      - contacts
    properties:
      contacts:
        type: array
        items :
          $ref : "#/definitions/Contact"

  Contact:
    required:
      - firstName
      - lastName
    properties:
       firstName:
          type : string
       lastName:
          type:  string

  ContactNew:
    required:
      - contact
    properties:
       contact:
        $ref : "#/definitions/Contact"

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
